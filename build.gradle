buildscript {
  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
  }

  dependencies {
    classpath 'com.gradle.publish:plugin-publish-plugin:0.10.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.12.0'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.4.0'
  }
}

apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'java-gradle-plugin'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'com.vanniktech.android.junit.jacoco'
//apply plugin: "com.vanniktech.maven.publish"
apply plugin: 'maven-publish'

repositories {
  mavenCentral()
  google()
  jcenter()
}

dependencies {
  api gradleApi()
  api localGroovy()

  compileOnly 'com.android.tools.build:gradle:3.3.0'

  testCompile 'com.android.tools.build:gradle:3.3.0'
  testCompile 'junit:junit:4.12'
}

sourceCompatibility = JavaVersion.VERSION_1_7
group = GROUP
version = VERSION_NAME

pluginBundle {
  website = POM_URL
  vcsUrl = POM_SCM_URL
  tags = ['gradle', 'android', 'javadoc', 'app module', 'library module']

  plugins {
    androidJavadocPlugin {
      id = 'fr.coppernic.android.javadoc'
      displayName = POM_NAME
      description = POM_DESCRIPTION
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.10.1'
  distributionType = Wrapper.DistributionType.ALL
}


// Using :publishToMavenLocal will put the jar in $home/.m2 repo
publishing {
  publications {
    art(MavenPublication) {
      groupId = GROUP
      artifactId = POM_ARTIFACT_ID

      //artifact jar
      from components.java
    }
  }
}

tasks.named("publishToMavenLocal") .configure {
  dependsOn assemble
}
